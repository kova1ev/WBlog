@page "/admin/Tag/Edit/{Id:guid?}"


<SideMenu></SideMenu>
<div class="col-lg-10">
    @if (!string.IsNullOrWhiteSpace(Message))
    {
        <p class="text-danger">@Message</p>
    }
    <div class="d-flex mb-2">
        <h4><span class="fs-5">Текущие название: </span>@TagName</h4>
    </div>
    <EditForm class="" Model="Tag" OnValidSubmit="Update">
        <DataAnnotationsValidator />
        <label for="name" class="from-label mb-2">Новое название</label>
        <InputText id="name" class="form-control mb-2" @bind-Value="Tag.Name"></InputText>
        <ValidationMessage For="()=>Tag.Name" />
        <button class="btn btn-md btn-outline-success mt-1" type="submit">Сохранить</button>
    </EditForm>

</div>


@code {
    public string? Message { get; set; }

    [Inject]
    public IBlogClient? BlogClient { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    public TagModel Tag { get; set; } = new();
    string? TagName { get; set; }
    protected async override Task OnInitializedAsync()
    {
        if (Id != default)
        {
            await GetTag();
        }

    }

    private async Task GetTag()
    {
        Tag = await BlogClient.GetAsync<TagModel>($"/api/tag/{Id}");
        TagName = Tag.Name;
    }

    private async Task Update()
    {
        System.Console.WriteLine("key down");
        Message = "Changed";
        if (!string.IsNullOrWhiteSpace(Tag.Name))
        {
            var result = await BlogClient.PutAsync("api/tag", Tag);
            await GetTag();
        }
    }
}