@model IndexModel
@inject IOptions<SiteOptions> Settings
@{
    int barSize = Settings.Value.BarSize; // must be odd number
    var numberPages = (Enumerable.Range(1, Model.PageParametrs.TotalPages));
    int[] numberPagesArray = numberPages.Take(barSize).ToArray();
    if (Model.CurrentPage > ((barSize / 2) + 1))
    {
        numberPagesArray = numberPages.Skip(Model.CurrentPage - ((barSize / 2) + 1)).Take(barSize).ToArray();
    }
    if (Model.CurrentPage >= (Model.PageParametrs.TotalPages - (barSize / 2)))
    {
        numberPagesArray = numberPages.Skip(Model.PageParametrs.TotalPages - barSize).Take(barSize).ToArray();
    }
}

<ul class="pagination justify-content-center ">
    @if (Model.CurrentPage > 1)
    {
        <li class="page-item ">
            <a asp-page="Index" asp-route-p="@(Model.CurrentPage-1)" asp-route-tag="@Model.Tag"
            asp-route-serch="@Model.Serch" asp-route-datesort="@Model.DateSort" class="page-link text-dark">Назад</a>
        </li>
    }

    @foreach (var pageNumber in numberPagesArray)
    {
        <li class="page-item @ActiveNumberPage(@pageNumber)">
            <a asp-page="Index" asp-route-p="@pageNumber" asp-route-tag="@Model.Tag" asp-route-serch="@Model.Serch" 
            asp-route-datesort="@Model.DateSort"
            class="page-link text-dark">@pageNumber</a>
        </li>
    }

    @if (Model.CurrentPage < Model.PageParametrs.TotalPages)
    {
        <li class="page-item ">
            <a asp-page="Index" asp-route-p="@(Model.CurrentPage+1)" asp-route-tag="@Model.Tag"
            asp-route-serch="@Model.Serch" asp-route-datesort="@Model.DateSort" class="page-link text-dark">Вперед</a>
        </li>
    }
</ul>

@functions {
    private string ActiveNumberPage(int i)
    {
        return Model.CurrentPage == i ? "active" : "";
    }
}